# This a the module default configuration values
# We should always add a default value for every possible configuration parameter.

# Dropwizard default ports
dw.http.port=8080
dw.http.adminPort=8081

#ETag filter enabled
etag.enabled=true

# CORS settings
cors.enabled=true
cors.allowedOrigins=any

# Pagination settings
api.defaultPageSize=10
api.maxPageSize=50

# Custom filters enabled
filter.charset.enabled=true
filter.noRedirect.enabled=true
filter.headersQueryParams.enabled=true

#Allow request without domain in uri filter configuration
filter.allowRequestWithoutDomainInUri.enabled=true
filter.allowRequestWithoutDomainInUri.endpoints=resource

# MongoDB Configuration
resources.mongodb.host=${MONGO_PORT_27017_TCP_ADDR:localhost}
resources.mongodb.port=${MONGO_PORT_27017_TCP_PORT:27017}
resources.mongodb.autoConnectRetry=true
resources.mongodb.connectionsPerHost=20
resources.mongodb.connectTimeout=5000
resources.mongodb.cursorFinalizerEnabled=true
resources.mongodb.fsync=false
resources.mongodb.j=false
resources.mongodb.maxAutoConnectRetryTime=1000
resources.mongodb.maxWaitTime=5000
resources.mongodb.socketKeepAlive=true
resources.mongodb.socketTimeout=60000
resources.mongodb.threadsAllowedToBlockForConnectionMultiplier=4
resources.mongodb.w=1
resources.mongodb.wtimeout=0
resources.mongodb.slaveOk=true
# Uncomment this if you want to use a password for MongoDB
# resources.mongodb.username=
# resources.mongodb.password=

# URI used to JWT audience validation
resources.uri=http://resources.corbel.io

# Plugins configuration
resources.plugins.resilient=false

# Authentication Redis connection
auth.redis.host=${REDIS_PORT_6379_TCP_ADDR:localhost}
auth.redis.port=${REDIS_PORT_6379_TCP_PORT:6379}
# Uncomment this if you want to use a password for Redis
# auth.redis.password=
# When this is enabled an access token must be sent on the Authorization heather in order to access secure APIs
auth.enabled=true
# When this is enabled the access token must have permissions to perform operations in the url domain.
auth.checkDomain.enabled=true
# This defines the which access rules this system is interested in
auth.audience=${resources.uri}
# The auth realm is just a name given to the authentication mechanism
auth.realm=OAuth Access Token
# Defines the pattern of paths which are secure and requires authorization token
auth.unAuthenticatedPath=version|plugins
# Maximum connections to Redis
auth.redis.maxTotal=50
# Maximum active connections to Redis instance
auth.redis.maxIdle=10
# Minimum number of idle connections to Redis - these can be seen as always open and ready to serve
auth.redis.minIdle=1
# Tests whether connection is dead when connection retrieval method is called
auth.redis.testOnBorrow=true
# Tests whether connection is dead when returning a connection to the pool
auth.redis.testOnReturn=true
# Tests whether connections are dead during idle periods
auth.redis.testWhileIdle=true
# Maximum number of connections to test in each idle check
auth.redis.numTestsPerEvictionRun=1
# Maximum time, in milliseconds, to wait for a resource when auth.redis.blockWhenExhausted is set to true
auth.redis.maxWaitMillis=5000
# Idle connection checking period
auth.redis.timeBetweenEvictionRunsMillis=60000
# Wait when connection pool is exhausted
auth.redis.blockWhenExhausted=true
# Uncomment this if you want to use a password for Redis
# auth.redis.password=

# Caches configuration
resources.cache.typeRelations.expiry=1800
resources.cache.relationFields.expiry=1800

# Password used to sign JWT tokens
token.signatureKey=key

#Eventbus configuration
eventbus.exchange=eventbus.exchange

# Eventbus's RabbitMQ configuration
eventbus.rabbitmq.host=${RABBITMQ_PORT_5672_TCP_ADDR:localhost}
eventbus.rabbitmq.port=${RABBITMQ_PORT_5672_TCP_PORT:5672}
eventbus.rabbitmq.username=guest
eventbus.rabbitmq.password=guest
eventbus.rabbitmq.requestedHeartbeat=10
eventbus.rabbitmq.connectionTimeout=60000