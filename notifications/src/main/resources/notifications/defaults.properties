# This is the module default configuration values
# We should always add a default value for every possible configuration parameter.

# Dropwizard default ports
dw.http.port=8094
dw.http.adminPort=8095

#ETag filter enabled
etag.enabled=true

#CORS settings
cors.enabled=true
cors.allowedOrigins=any

# Pagination settings
api.defaultPageSize=10
api.maxPageSize=50

# This defines if the REST API is enabled or not. To run notifications in worker only mode set this to false;
notifications.rest.enabled=true

#MongoDB Configuration
notifications.mongodb.host=${MONGO_PORT_27017_TCP_ADDR:localhost}
notifications.mongodb.port=${MONGO_PORT_27017_TCP_PORT:27017}
notifications.mongodb.autoConnectRetry=true
notifications.mongodb.connectionsPerHost=20
notifications.mongodb.connectTimeout=5000
notifications.mongodb.cursorFinalizerEnabled=true
notifications.mongodb.fsync=false
notifications.mongodb.j=false
notifications.mongodb.maxAutoConnectRetryTime=1000
notifications.mongodb.maxWaitTime=5000
notifications.mongodb.socketKeepAlive=true
notifications.mongodb.socketTimeout=60000
notifications.mongodb.threadsAllowedToBlockForConnectionMultiplier=4
notifications.mongodb.w=1
notifications.mongodb.wtimeout=0
notifications.mongodb.slaveOk=true
# Uncomment this if you want to use a password for MongoDB
# notifications.mongodb.user=
# notifications.mongodb.password=

# URI used to JWT audience validation
notifications.uri=http://notifications.corbel.io
#When this is enabled an access token must be sent on the Authorization heather in order to access secure APIs
auth.enabled=true
# When this is enabled the access token must have permissions to perform operations in the url domain.
auth.checkDomain.enabled=true
#This defines the which access rules this system is interested in
auth.audience=${notifications.uri}
#The auth realm is just a name given to the authentication mechanism
auth.realm=OAuth Access Token
#Defines the pattern of paths which are secure and requires authorization token
auth.unAuthenticatedPath=version
#Auth Redis connection
auth.redis.host=localhost
auth.redis.port=6379
# Uncomment this if you want to use a password for Redis
# auth.redis.password=
# Maximum connections to Redis
auth.redis.maxTotal=50
# Maximum active connections to Redis instance
auth.redis.maxIdle=10
# Minimum number of idle connections to Redis - these can be seen as always open and ready to serve
auth.redis.minIdle=1
# Tests whether connection is dead when connection retrieval method is called
auth.redis.testOnBorrow=true
# Tests whether connection is dead when returning a connection to the pool
auth.redis.testOnReturn=true
# Tests whether connections are dead during idle periods
auth.redis.testWhileIdle=true
# Maximum number of connections to test in each idle check
auth.redis.numTestsPerEvictionRun=1
# Maximum time, in milliseconds, to wait for a resource when auth.redis.blockWhenExhausted is set to true
auth.redis.maxWaitMillis=5000
# Idle connection checking period
auth.redis.timeBetweenEvictionRunsMillis=60000
# Wait when connection pool is exhausted
auth.redis.blockWhenExhausted=true

#Password used to sign JWT tokens
token.signatureKey=key

# Eventbus RabbitMQ Configuration
eventbus.rabbitmq.host=${RABBITMQ_PORT_5672_TCP_ADDR:localhost}
eventbus.rabbitmq.port=${RABBITMQ_PORT_5672_TCP_PORT:5672}
eventbus.rabbitmq.username=guest
eventbus.rabbitmq.password=guest
eventbus.rabbitmq.requestedHeartbeat=10
eventbus.rabbitmq.connectionTimeout=60000

# Options to RabbitMQ backoff on failed messages
rabbitmq.maxAttempts=3
rabbitmq.backoff.initialInterval=1000
rabbitmq.backoff.multiplier=2.0
rabbitmq.backoff.maxInterval=350000

# Eventbus configuration
eventbus.listener.name=notifications
eventbus.maxAttempts=5
eventbus.backoff.initialInterval=1000
eventbus.backoff.multiplier=3.0
eventbus.backoff.maxInterval=350000

#Apple Push Notifications
apple.cert.name=push-dev.p12
apple.cert.password=test
apple.cert.production=false

#Allow request without domain in uri filter configuration
filter.allowRequestWithoutDomainInUri.enabled=true
filter.allowRequestWithoutDomainInUri.endpoints=domain,notification

