# This is the module default configuration values
# We should always add a default value for every possible configuration parameter.

# Dropwizard default ports
dw.http.port=8096
dw.http.adminPort=8097

#ETag filter enabled
etag.enabled=true

# CORS settings
cors.enabled=true
cors.allowedOrigins=any

# Pagination settings
api.defaultPageSize=10
api.maxPageSize=50

# Custom filters enabled
filter.charset.enabled=true
filter.noRedirect.enabled=true
filter.allowRequestWithoutDomainInUri.enabled=true
filter.allowRequestWithoutDomainInUri.endpoints=path

# URI used to JWT audience validation
webfs.uri=http://webfs.corbel.io

# Webfs Configuration
webfs.accepted.mediatypes=*/*

# S3 Configuration
webfs.s3.key=key
webfs.s3.secret=secret
webfs.s3.bucket=bucket
webfs.s3.region=eu-west-1

# Authentication Redis connection
auth.redis.host=${REDIS_PORT_6379_TCP_ADDR:localhost}
auth.redis.port=${REDIS_PORT_6379_TCP_PORT:6379}
# Uncomment this if you want to use a password for Redis
# auth.redis.password=
# When this is enabled an access token must be sent on the Authorization heather in order to access secure APIs
auth.enabled=true
# This defines the which access rules this system is interested in
auth.audience=${webfs.uri}
# The auth realm is just a name given to the authentication mechanism
auth.realm=OAuth Access Token
# Defines the pattern of paths which are secure and requires authorization token
auth.unAuthenticatedPath=version
# Maximum connections to Redis
auth.redis.maxTotal=50
# Maximum active connections to Redis instance
auth.redis.maxIdle=10
# Minimum number of idle connections to Redis - these can be seen as always open and ready to serve
auth.redis.minIdle=1
# Tests whether connection is dead when connection retrieval method is called
auth.redis.testOnBorrow=true
# Tests whether connection is dead when returning a connection to the pool
auth.redis.testOnReturn=true
# Tests whether connections are dead during idle periods
auth.redis.testWhileIdle=true
# Maximum number of connections to test in each idle check
auth.redis.numTestsPerEvictionRun=1
# Maximum time, in milliseconds, to wait for a resource when auth.redis.blockWhenExhausted is set to true
auth.redis.maxWaitMillis=5000
# Idle connection checking period
auth.redis.timeBetweenEvictionRunsMillis=60000
# Wait when connection pool is exhausted
auth.redis.blockWhenExhausted=true
# Uncomment this if you want to use a password for Redis
# auth.redis.password=

# Password used to sign JWT tokens
token.signatureKey=key